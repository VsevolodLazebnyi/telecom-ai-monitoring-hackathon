version: '3.8'

services:

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./generated_dashboards:/app/generated_dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - monitoring

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.1
    container_name: cadvisor
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    command:
      - '--storage_duration=15s'
    networks:
      - monitoring
    labels:
      org.label-schema.group: "monitoring"
      name: "cadvisor"

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    networks:
      - monitoring

  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis-exporter
    restart: unless-stopped
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis:6379
    depends_on:
      - redis
    networks:
      - monitoring

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass admin123
    environment:
      - REDIS_PASSWORD=admin123
    volumes:
      - redis_data:/data
    networks:
      - monitoring

  nginx-1:
    image: nginx:latest
    container_name: nginx-1
    ports:
      - "80:80"
    volumes:
      - nginx-data-1:/usr/share/nginx/html
    networks:
      - monitoring

  nginx-2:
    image: nginx:latest
    container_name: nginx-2
    ports:
      - "81:80"
    volumes:
      - nginx-data-2:/usr/share/nginx/html
    networks:
      - monitoring

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: telecom_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - monitoring
    ports:
      - "5432:5432"

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:admin@postgres:5432/telecom_db?sslmode=disable"
    ports:
      - "9187:9187"
    depends_on:
      - postgres
    networks:
      - monitoring

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin123
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - monitoring
  
  gpt4free:
    container_name: gpt4free
    image: hlohaus789/g4f:latest-slim
    restart: always
    ports:
      - 127.0.0.1:1337:1337
    volumes:
      - ./har_and_cookies:/app/har_and_cookies
      - ./generated_images:/app/generated_images
    command: >
      /bin/sh -c "
      rm -r -f /app/g4f/ &&
      pip install -U g4f[slim] &&
      python -m g4f --debug"
    environment:
      - OPENAI_EMBEDDING_MODEL=text-embedding-ada-002
    networks:
      - monitoring

  telecom-simulator:
    build: ./simulators
    container_name: telecom-simulator
    restart: unless-stopped
    environment:
      - RABBITMQ_URL=amqp://admin:admin123@rabbitmq:5672/
      - REDIS_URL=redis://:admin123@redis:6379/0
    depends_on:
      - rabbitmq
      - redis
    networks:
      - monitoring

  telecom-monitoring-console:
    build: .
    container_name: telecom-monitoring-console
    restart: unless-stopped
    ports:
      - "8501:8501"
    volumes:
      - ./generated_dashboards:/app/generated_dashboards
    environment:
      - PROMETHEUS_URL=http://prometheus:9090
      - GRAFANA_URL=http://grafana:3000
      - GRAFANA_API_KEY=glsa_CR1KUKUEXjXsZsO72sGV0JGbJEm2Aj5y_4e2e5639
      - REDIS_URL=redis://:admin123@redis:6379/0
      - RABBITMQ_URL=amqp://admin:admin123@rabbitmq:5672/
      - GPT4FREE_URL=http://gpt4free:1337
    depends_on:
      - prometheus
      - grafana
      - redis
      - rabbitmq
      - gpt4free
    networks:
      - monitoring
      
networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana-data: {}
  nginx-data-1: {}
  nginx-data-2: {}
  postgres-data: {}
  redis_data: {}
  rabbitmq_data: {}
  gpt4free_data: {}